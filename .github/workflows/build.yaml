on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/build.yaml
      - teal-agents.Dockerfile
      - ao.Dockerfile
      - ao-services.Dockerfile
      - 'shared/ska_utils/**'
      - 'src/sk-agents/**'
      - 'src/orchestrators/assistant-orchestrator/orchestrator/**'
      - 'src/orchestrators/assistant-orchestrator/services/**'
      - '!**.md'

jobs:
  changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      utils: ${{ steps.filter.outputs.utils }}
      agents: ${{ steps.filter.outputs.agents }}
      ao: ${{ steps.filter.outputs.ao }}
      services: ${{ steps.filter.outputs.services }}
    steps:
    # For pull requests it's not necessary to checkout the code
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          utils:
            - .github/workflows/build.yaml
            - 'shared/ska_utils/**'
            - '!**.md'
          agents:
            - .github/workflows/build.yaml
            - teal-agents.Dockerfile
            - 'shared/ska_utils/**'
            - 'src/sk-agents/**'
            - '!**.md'
          ao:
            - .github/workflows/build.yaml
            - ao.Dockerfile
            - 'shared/ska_utils/**'
            - 'src/orchestrators/assistant-orchestrator/orchestrator/**'
            - '!**.md'
          services:
            - .github/workflows/build.yaml
            - ao-services.Dockerfile
            - 'shared/ska_utils/**'
            - 'src/orchestrators/assistant-orchestrator/services/**'
            - '!**.md'

  version-utils:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.utils == 'true' }}
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.TEAL_AGENTS_BOT }}
          persist-credentials: true
      - name: Setup uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - name: Install dependencies
        working-directory: ./shared/ska_utils
        run: make sync
      - name: Bump version with hatch
        id: bump_version
        working-directory: ./shared/ska_utils
        run: |
          git pull
          git checkout ${{ github.ref_name }}
          uv run hatch version dev
          git config --global user.name "Teal Agents Bot"
          git config --global user.email " "
          git commit -am "bump ska-utils dev version [skip ci]"
          git push --set-upstream origin ${{ github.ref_name }}

  build-agents:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.agents == 'true' }}
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.TEAL_AGENTS_BOT }}
          persist-credentials: true
      - name: Setup uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - name: Install dependencies
        working-directory: ./src/sk-agents
        run: make sync
      - name: Bump version with hatch
        id: bump_version
        working-directory: ./src/sk-agents
        run: |
          git pull
          git checkout ${{ github.ref_name }}
          uv run hatch version dev
          git config --global user.name "Teal Agents Bot"
          git config --global user.email " "
          git commit -am "bump sk-agents dev version [skip ci]"
          git push --set-upstream origin ${{ github.ref_name }}
      - name: Extract version with hatch
        id: extract_version
        working-directory: ./src/sk-agents
        run: |
          git pull
          make sync
          VERSION=$( uv run hatch version )
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
      - name: Build Docker image
        run: |
          docker build -t ghcr.io/teal-agents/teal-agents:${{ steps.extract_version.outputs.VERSION }} -f teal-agents.Dockerfile .
          docker tag ghcr.io/teal-agents/teal-agents:${{ steps.extract_version.outputs.VERSION }} ghcr.io/teal-agents/teal-agents:latest
      - name: Log in to Docker registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push Docker image
        run: |
          docker push ghcr.io/teal-agents/teal-agents:${{ steps.extract_version.outputs.VERSION }}
          docker push ghcr.io/teal-agents/teal-agents:latest

  build-ao:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.ao == 'true' }}
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.TEAL_AGENTS_BOT }}
          persist-credentials: true
      - name: Setup uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - name: Install dependencies
        working-directory: ./src/orchestrators/assistant-orchestrator/orchestrator/
        run: make sync
      - name: Bump version with hatch
        id: bump_version
        working-directory: ./src/orchestrators/assistant-orchestrator/orchestrator/
        run: |
          git pull
          git checkout ${{ github.ref_name }}
          uv run hatch version dev
          git config --global user.name "Teal Agents Bot"
          git config --global user.email " "
          git commit -am "bump ao dev version [skip ci]"
          git push --set-upstream origin ${{ github.ref_name }}
      - name: Extract version with hatch
        id: extract_version
        working-directory: ./src/orchestrators/assistant-orchestrator/orchestrator
        run: |
          git pull
          make sync
          VERSION=$( uv run hatch version )
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
      - name: Build Docker image
        run: |
          docker build -t ghcr.io/teal-agents/ao:${{ steps.extract_version.outputs.VERSION }} -f ao.Dockerfile .
          docker tag ghcr.io/teal-agents/ao:${{ steps.extract_version.outputs.VERSION }} ghcr.io/teal-agents/ao:latest
      - name: Log in to Docker registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push Docker image
        run: |
          docker push ghcr.io/teal-agents/ao:${{ steps.extract_version.outputs.VERSION }}
          docker push ghcr.io/teal-agents/ao:latest

  build-ao-services:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.services == 'true' }}
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.TEAL_AGENTS_BOT }}
          persist-credentials: true
      - name: Setup uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - name: Install dependencies
        working-directory: ./src/orchestrators/assistant-orchestrator/services/
        run: make sync
      - name: Bump version with hatch
        id: bump_version
        working-directory: ./src/orchestrators/assistant-orchestrator/services/
        run: |
          git pull
          git checkout ${{ github.ref_name }}
          uv run hatch version dev
          git config --global user.name "Teal Agents Bot"
          git config --global user.email " "
          git commit -am "bump ao services dev version [skip ci]"
          git push --set-upstream origin ${{ github.ref_name }}
      - name: Extract version with hatch
        id: extract_version
        working-directory: ./src/orchestrators/assistant-orchestrator/services
        run: |
          git pull
          make sync
          VERSION=$( uv run hatch version )
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
      - name: Build Docker image
        run: |
          docker build -t ghcr.io/teal-agents/ao-services:${{ steps.extract_version.outputs.VERSION }} -f ao-services.Dockerfile .
          docker tag ghcr.io/teal-agents/ao-services:${{ steps.extract_version.outputs.VERSION }} ghcr.io/teal-agents/ao-services:latest
      - name: Log in to Docker registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push Docker image
        run: |
          docker push ghcr.io/teal-agents/ao-services:${{ steps.extract_version.outputs.VERSION }}
          docker push ghcr.io/teal-agents/ao-services:latest
