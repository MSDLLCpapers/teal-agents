[project]
name = "ska-utils"
dynamic = ["version"]
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "opentelemetry-exporter-otlp-proto-grpc>=1.29.0",
    "pydantic>=2.9.2",
    "python-dotenv>=1.0.1",
    "redis>=6.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
include = ["src"]

[tool.hatch.build.targets.wheel]
packages = ["src/ska_utils"]

[tool.hatch.version]
path = "src/ska_utils/__about__.py"
fallback-version = "0.0.0"

[tool.hatch.metadata]
allow-direct-references = true

[dependency-groups]
dev = [
    "mypy",
    "ruff",
    "pytest",
    "coverage",
    "pytest-cov",
    "hatchling",
    "hatch",
    "freezegun",
    "pytest-mock",
    "pytest-asyncio",
]

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
isort = { combine-as-imports = true }

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
strict = false
disallow_incomplete_defs = false
disallow_untyped_defs = false
disallow_untyped_calls = false
files = ["src/ska_utils/", "tests/"]
follow_imports = "skip"
python_version = 3.11

[tool.coverage.run]
source = ["src/ska_utils"]
omit = ["*/tests/*", "test_*", "__init__.py", "__about__.py"]

[tool.coverage.report]
show_missing = true
sort = "-Cover"
exclude_also = [
    # This is only executed while typechecking
    "if TYPE_CHECKING:",
    "@abc.abstractmethod",
    "raise NotImplementedError",
    "logger.debug",
]
